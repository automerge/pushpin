/* Reset Styles: http://meyerweb.com/eric/tools/css/reset/ */

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}
body {
  line-height: 1;
}
ol, ul {
  list-style: none;
}
blockquote, q {
  quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}


/* Line Awesome */

.fa {
  font-size: 16px;
}

/* Variables */

:root {
  --colorBlueBlack: #102542;
  --colorBlack: var(--colorBlack);
  --colorSecondaryGrey: #637389;
  --colorPaleGrey: #D5DFE5;
  --colorInputGrey: #E9EDF0;
  --colorLink: #0645ad;
  --colorDestructive: #F87060;
  --zIndexCard: 1;
}

/* Global */

a {
  cursor: pointer;
}


/* Dropdown React component functional styles */

.dropdown {
  /* display: inline-block; */
}

.dropdown__content {
  display: none;
  position: absolute;
}

.dropdown--active .dropdown__content {
  display: block;
}


/* App Styles */

html, body, #app, [data-reactroot], .react-contextmenu-wrapper, .board {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  font-size: 14px;
  line-height: 20px;
  -webkit-font-smoothing: antialiased;
}

input {
  font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  font-size: 14px;
  line-height: 20px;
  color: var(--colorBlueBlack);
  padding: 0 8px;
  box-sizing: border-box;
  height: 32px;
  border-radius: 4px;
  background: var(--colorInputGrey);
  border: 0px;
  outline: none;
}

#workspace, .Workspace, .Workspace__container {
  height: 100%;
}

.Workspace__container {
  margin-top: 40px;
}

.Notification {
  margin: 8px;
  border: 1px solid #e9edf0;
  border-radius: 4px;
  padding: 8px;
  padding-bottom: 0px;
}

.Notification p {

}
.Avatar {
  box-sizing: border-box;
  position: relative;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.27);
  padding:2px;
}

.Avatar img {
  width: 36px;
  height: 36px;
  border-radius: 50%;
}

.ContextMenu {
  background-color: #ffffff;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.12);
  width: 200px;
  z-index: 10;
}

.ContextMenu__divider {
  height: 1px;
  border-top: 1px solid var(--colorInputGrey);
}

.ContextMenu__section {
  padding: 4px 0;
}

.ContextMenu__iconBounding {
  display: inline-block;
  width: 28px;
  height: 28px;
  border-radius: 4px;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  margin-right: 8px;
}

.ContextMenu .react-contextmenu-item {
  padding: 4px 8px;
  cursor: pointer;
}

.ContextMenu .react-contextmenu-item:last-child {
  margin-bottom: 0px;
}

.ContextMenu__iconBounding--note {
  background-image: linear-gradient(135deg, #d2e5f7, #f1dce4);
  color: var(--colorBlueBlack);
}

.ContextMenu__iconBounding--file {
  background-image: linear-gradient(135deg, #85e2f8, #c7d7e3);
  color: #006476;
}

.ContextMenu__iconBounding .fa {
  font-size: 22px;
}

.ContextMenu__label {
  vertical-align: middle;
}

.ContextMenu h6 {
  padding-left: 8px;
  font-size: 12px;
  line-height: 16px;
  margin-bottom: 8px;
  color: var(--colorBlueBlack);
}

.ColorPicker {
  background: #fff;
  border: 0 solid rgba(0,0,0,0.25);
  border-radius: 2px;
  display: grid;
  grid-template-columns: repeat(6, 24px);
  grid-gap: 8px;
}

.ColorPicker__swatch {
  width: 24px;
  height: 24px;
  border-radius: 2px;
  overflow: hidden;
}

.TitleBar {
  display: flex;
  box-sizing: border-box;
  position: fixed;
  top: 0px;
  height: 40px;
  padding: 0px 8px;
  width: 100%;
  align-items: center;
  align-content: space-between;
  background-color: #ffffff;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.12);
  z-index: 3;
  color: var(--colorSecondaryGrey);

}
.TitleBar__menuItem .fa {
  font-size: 24px;
  line-height: 30px; /* this is a slight hack */
  width:32px;
  text-align: center;
}

.TitleBar__center {
  display: flex;
  align-items: center;
  margin: 0 auto;
}

.TitleBar .TitleBar__right, .TitleBar .TitleBar__left {
  align-items: center;
  display: flex;
  height: 40px;
}

.TitleBar .TitleBar__left {
  position: absolute;
  left:8px;
  top:0;

}
.TitleBar .TitleBar__right {
  position: absolute;
  top:0;
  right: 8px;
}

.TitleBar .TitleBar__menuItem {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  width:40px;
  height:40px;
}
.TitleBar .TitleBar__button {
  width: 32px;
  height: 32px;
  border-radius: 16px;
  padding:0;
  border: none;
  background: none;
  margin: none;
}
.TitleBar .TitleBar__button:active,
.TitleBar .TitleBar__button:focus {
  outline: none;
}
.TitleBar .TitleBar__button:active {
  background-color: var(--colorPaleGrey);
}
.TitleBar .TitleBar__menuItem:hover {
  color: var(--colorBlueBlack);
}
.TitleBar .dropdown__trigger {
  width:32px;
  height:32px;
  border-radius: 16px;
}
.TitleBar .dropdown.dropdown--active .dropdown__trigger {
  background-color: var(--colorInputGrey);
}

.TitleBar .dropdown__content {
  top: 52px;
  right: 12px;
}

.TitleBar__logo {
  margin-right: 8px;
}

.TitleBar__titleText {
  max-width: 244px;
  padding: 0px 4px;
  white-space: nowrap;
  overflow:hidden;
  text-overflow: ellipsis;
}

input.TitleBar__titleText{
  width: 244px;
  font-size: 14px;
  color: black;
  font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  background: var(--colorInputGrey);
  border:0px;
  outline: none;
  border-radius: 4px;
  height: 24px;
  line-height:24px;
}

input.TitleBar__titleText::selection {
  background: rgba(0,0,0,.05);
}

.TitleBar__dropDown {

}
.HashForm {
  padding: 4px 8px;
}
.HashForm input {
  padding: 0;
  margin-left: auto;
  box-sizing: border-box;
  width: 66ch;
  height: 24px;
  font-family: 'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  color: var(--colorSecondaryGrey);
  text-align: center;
  font-size: 13px;
  border-radius: 4px;
  border: 0px;
}

.HashForm input:focus {
  outline: none;
  background: var(--colorInputGrey);
}

.HashForm input.loading {
  background-color: #fff2cc;
}


div.board {
  position:relative;
  background-image: url(grid.svg);
  background-blend-mode: color-burn;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.card {
  border-top: 0;
  max-height: 100%;
  max-width: 100%;
  min-width: 20px;
  z-index: var(--zIndexCard);
}

div.card.text {
  /* use an inset box-shadow to avoid the mitering of corners with normal borders */
  min-width: 48px;
  max-width: 481px;
}

div.card.text.selected {
  /* attach the outline to the content, covering the 1px border */
  outline-offset: -1px;
  outline: 2px solid black;
}

div.card.selected {
  outline: solid 2px var(--colorBlueBlack);
}

div.card span.cardResizeHandle {
  position: absolute;
  width: 16px;
  height: 16px;
  bottom: 1px;
  right: 1px;
  background: url('corner.svg');
  background-position: bottom right;
  background-repeat: no-repeat;
  background-origin: content-box;
  cursor: se-resize;
  visibility: hidden;
}

.card:hover .cardResizeHandle {
  visibility: visible;
}

.card {
  box-sizing: border-box;
  display: flex;
}

.card:focus, .card:active {
  outline: none;
}

div.card img.image {
  height: 100%;
  width: 100%;
  object-fit: cover;
  pointer-events: none;
  user-select: none;
}

div.card.image {
  padding: 12px;
  box-sizing: border-box;
  background: white;
  border: solid 1px var(--colorPaleGrey);
}

.react-toggle {
  margin: auto;
}

.react-toggle-track-check, .react-toggle-track-x {
  margin-top: 0;
  margin-bottom: 0;
  top: 7px;
}

/* Typography */
.Label {
  white-space: nowrap;
  overflow: hidden;
}
.Type--header {
  font-size: 14px;
  font-weight: 400;
  overflow: hidden;
  text-overflow: ellipsis;
}
.Type--action {
  color: var(--colorLink);
}
.Type--primary {
  font-size: 14px;
  font-weight: 400;
  overflow: hidden;
  text-overflow: ellipsis;
}
.Type--secondary {
  font-size: 12px;
  font-weight: 500;
  color: var(--colorSecondaryGrey);
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Popover Menus */
.PopOverWrapper {
  background-color: #fff;
  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.12);
  min-height: 8px;
  border-radius: 4px;
  width: 296px;
  max-height: 480px;
  overflow-y: scroll;
}

/* Buttons */

.ListMenu button {
  box-sizing: border-box;
  font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  font-size: 14px;
  height:32px;
  background-color: white;
  color: var(--colorLink);
  border:1px solid var(--colorInputGrey);
  color: white;
  border-radius: 4px;
  padding: 4px 8px;
}
.ListMenu button:focus {
  outline: none;
  background-color: var(--colorInputGrey);
}
.ButtonGroup {
  display: flex;
  padding: 4px 8px;
}

.ButtonAction {
  box-sizing: border-box;
  color: var(--colorSecondaryGrey);
  min-width: 32px;
  padding: 0px 4px;
  height: 32px;
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border: 1px solid transparent;
}
.ButtonAction--destructive {
  color: var(--colorDestructive);
}
.ButtonAction--primary {
  color: var(--colorLink);
}
.ButtonAction:hover {
  border: 1px solid;
}

.ButtonAction .fa {
  color: inherit;
  font-size: 24px;
}
.ButtonAction .ButtonAction__label {
  padding-left:4px;
  padding-right:4px;
}


/* List Menus */

.ListMenu {
  color: var(--colorBlueBlack);
  padding-bottom: 4px;
}

.ListMenu input {
  width: 100%;
}

.ListMenu__section {
  padding: 4px 0px;
}

.ListMenu__header {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0px 8px;
  line-height: 24px;
  height:40px;
  border-bottom:1px solid var(--colorPaleGrey);
}

.ListMenu__segment {
  padding: 4px 8px;
  font-size: 12px;
  line-height: 16px;
  color: var(--colorSecondaryGrey);
  border-bottom:1px solid var(--colorPaleGrey);
}
.ListMenu__label {
  padding: 4px 8px;
  font-size: 14px;
  color: var(--colorSecondaryGrey);
  line-height: 16px;
}
.ListMenu__grouped {
  flex: 1;
  padding: 4px 0px;
  border-radius: 4px;
  border: 1px solid var(--colorPaleGrey);
  font-size: 14px;
  line-height: 20px;
}
.ListMenu__typegroup {
  padding: 4px 8px;
}
.ListMenu .ListMenu__item {
  display: flex;
  align-items: center;
  padding: 4px 8px;
  color: var(--colorBlueBlack);
  line-height:16px;
  min-height: 32px;
}

.ListMenu .ListMenu__item:hover{
}

.ListMenu__thumbnail {
  flex:none;
  margin-right: 8px;
}

.ListMenu .Actions {
  flex: none;
  display: flex;
  margin-left: auto;
}

.ListMenu .Actions > * {
  margin-left: 8px;
}

/* Tabs */
.Tabs {
  display: flex;
}

.Tabs .fa {
  font-size: 16px;
  margin-right: 4px;
}

.Tabs__tab {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  line-height: 16px;
  flex-grow: 1;
  text-align: center;
  background: var(--colorPaleGrey);
  padding: 12px 0;
  cursor: pointer;
  color: var(--colorSecondaryGrey);
}

.Tabs__tab--active {
  background: #ffffff;
  color: var(--colorBlueBlack);
}

.CodeMirrorEditor {
  cursor: text;
  text-align: left;
  color: var(--colorBlack);
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  background: white;
  border: solid 1px var(--colorPaleGrey);
  overflow: auto;
}
.CodeMirrorEditor:focus, .CodeMirrorEditor:active {
  outline: none;
}
.CodeMirrorEditor::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

.CodeMirrorEditor::-webkit-scrollbar-track {
  background-color: transparent;
  margin-bottom: 10px;

}

.CodeMirrorEditor::-webkit-scrollbar-thumb {
  background-color: transparent;
}

.CodeMirrorEditor:hover::-webkit-scrollbar-track {
  background-color: #f3f3f3;
}

.CodeMirrorEditor:hover::-webkit-scrollbar-thumb {
  background-color: var(--colorPaleGrey);
}

.CodeMirrorEditor::-webkit-scrollbar-thumb:hover {
  background-color: #CBD5DB;
}
.CodeMirrorEditor__editor {
  box-sizing: border-box;
  width: 100%;
  padding: 12px;
}

.CodeMirrorEditor div.CodeMirror {
  height: auto;
}

.CodeMirrorEditor div.CodeMirror-lines {
  font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;
  font-size: 14px;
  line-height: 20px;
  padding: 0;
}

.CodeMirrorEditor pre.CodeMirror-line {
  padding: 0;
}

.CodeMirrorEditor__renderer {
  box-sizing: border-box;
  width: 100%;
  padding: 12px;
}

.CodeMirrorEditor__renderer a {
  color: #0645ad;
  text-decoration: none;
}

.CodeMirrorEditor__renderer a:visited {
  color: #0b0080;
}

.CodeMirrorEditor__renderer a:hover {
  color: #06e;
}

.CodeMirrorEditor__renderer a:active {
  color: #faa700;
}

.CodeMirrorEditor__renderer a:focus {
  outline: thin dotted;
}

.CodeMirrorEditor__renderer a:hover, .CodeMirrorEditor__renderer a:active {
  outline: 0;
}

.CodeMirrorEditor__renderer h1,
.CodeMirrorEditor__renderer h2,
.CodeMirrorEditor__renderer h3,
.CodeMirrorEditor__renderer h4,
.CodeMirrorEditor__renderer h5,
.CodeMirrorEditor__renderer h6 {
  font-weight: 600;
  color: var(--colorBlueBlack);
  margin-bottom:8px;
}

.CodeMirrorEditor__renderer h4, h5, h6 {
  /* Placeholder Reminder: We don't anticipate these being used very often */
}

.CodeMirrorEditor__renderer h1 {
  font-size: 18px;
  line-height: 24px;
  letter-spacing: -.5px;

}

.CodeMirrorEditor__renderer h2 {
  font-size: 16px;
  line-height: 20px;
}

.CodeMirrorEditor__renderer h3 {
  font-size: 12px;
  line-height: 20px;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 600;
}

.CodeMirrorEditor__renderer h4 {
  color: var(--colorSecondaryGrey);

  font-weight:600;
}

.CodeMirrorEditor__renderer h5 {
  font-size: 12px;
  font-weight:600;
  color: var(--colorSecondaryGrey);
}

.CodeMirrorEditor__renderer h6 {
  font-weight:600;

}

.CodeMirrorEditor__renderer p {
  font-size: 14px;
  line-height:20px;
  margin-bottom: 8px;
}

.CodeMirrorEditor__renderer blockquote {
  color: var(--colorSecondaryGrey);
  margin: 0;
  padding-left: 12px;
  border-left: 1px var(--colorSecondaryGrey) solid;
}

.CodeMirrorEditor__renderer hr {
  display: block;
  border: 0;
  border-top: 1px solid var(--colorInputGrey);
  border-bottom: 1px solid var(--colorInputGrey);
  margin: 1em 0;
  padding: 0;
}

.CodeMirrorEditor__renderer pre, code, kbd, samp {
  color: var(--colorBlack);
  font-family: 'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace;
  font-size: 12px;
  line-height:16px;
  margin-bottom: 8px;
}

.CodeMirrorEditor__renderer code {

}

.CodeMirrorEditor__renderer pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
  tab-size: 2;
  color: white;
  background-color: var(--colorBlueBlack);
  padding: 8px;
  border-radius: 4px;
}

.CodeMirrorEditor__renderer b, strong {
  font-weight: bold;
}

.CodeMirrorEditor__renderer dfn {
  font-style: italic;
}

.CodeMirrorEditor__renderer ins {
  background: #ff9;
  color: var(--colorBlack);
  text-decoration: none;
}

.CodeMirrorEditor__renderer mark {
  background: #ff0;
  color: var(--colorBlack);
  font-style: italic;
  font-weight: bold;
}

.CodeMirrorEditor__renderer sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.CodeMirrorEditor__renderer sup {
  top: -0.5em;
}

.CodeMirrorEditor__renderer sub {
  bottom: -0.25em;
}

.CodeMirrorEditor__renderer ul, ol {
  list-style-type: disc;
  margin-left:12px;
  padding-left: 8px;
  margin-bottom: 8px;
}

.CodeMirrorEditor__renderer li p:last-child {
  margin: 0;
}

.CodeMirrorEditor__renderer dd {
  margin: 0 0 0 2em;
}

.CodeMirrorEditor__renderer table {
  border-collapse: collapse;
  border-spacing: 0;
}

.CodeMirrorEditor__renderer td {
  vertical-align: top;
}

.CodeMirrorEditor__renderer :first-child {
  margin-top: 0;
}

.CodeMirrorEditor__renderer :last-child {
  margin-bottom: 0;
}
